@use "sass:math";

//variables
$grid-columns: 12;
$gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
);

//list
$layout-values: flex-start, flex-end, center, space-between, space-around;

//base elements
.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}
.row {
  display: flex;
  flex-flow: row wrap; //in case screen makes smaller it moves box to next line
}

//grid gap
@each $key, $val in $gaps {
  .gap-#{$key} > * {
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

//justify content
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

//column classes
//extra small
@include xs {
  //cycle from 1 to 12
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
//small
@include sm {
  //cycle from 1 to 12
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
//mid
@include md {
  //cycle from 1 to 12
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
//large
@include lg {
  //cycle from 1 to 12
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
//extra large
@include xl {
  //cycle from 1 to 12
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
